MATCH (md)-[:HAS_METHODDECL_RETURNS]->(rt) OPTIONAL MATCH (rt)-[:ITS_TYPE_IS |:PARAMETERIZEDTYPE_TYPE]->()-[:ITS_TYPE_IS*0..1]->()-[:IS_SUBTYPE_EXTENDS | :IS_SUBTYPE_IMPLEMENTS*0..]->(collection) WITH md,rt,collection  WHERE  NOT collection IS NULL AND (collection.fullyQualifiedName='java.util.Collection' OR collection.fullyQualifiedName STARTS WITH 'java.util.Collection<' AND NOT collection.fullyQualifiedName CONTAINS '$') OR rt:ARRAY_TYPE WITH DISTINCT md  MATCH (enclosingCU)-[:HAS_TYPE_DEC |  :HAS_INDIRECT_TYPE_DEC]->()-[:DECLARES_METHOD]->(md)<-[:CFG_END_OF]-(normalEnd)<-[:CFG_NEXT_STATEMENT]-(return:RETURN_STATEMENT)-[:RETURN_EXPR]->(retExpr) OPTIONAL MATCH (retExpr)-[:CONDITIONAL_EXPR_THEN |  :CONDITIONAL_EXPR_ELSE*]->(auxRet{typetag:'NULL_LITERAL'}) WITH enclosingCU, retExpr, auxRet  WHERE auxRet IS NOT NULL OR retExpr.typetag='NULL_LITERAL' RETURN 'Warning [CMU-MET55], you must not return null when you can return an empty collection or array.Line' as description, retExpr.lineNumber as line, retExpr.column as column , enclosingCU.fileName as file, 'Low' as level
MATCH (enclosingCU)-[:HAS_TYPE_DEC |:HAS_INDIRECT_TYPE_DEC]->(typeDec{accessLevel:'public'})-[:DECLARES_METHOD]->(method{accessLevel:'public'})-[:HAS_METHODDECL_PARAMETERS]->(param)-[:USED_BY]->(id), (mInv:METHOD_INVOCATION)-[:METHODINVOCATION_METHOD_SELECT]->(mSelect:MEMBER_SELECTION{memberName:'clone'})-[:MEMBER_SELECT_EXPR]->(id), (mInv)-[:HAS_DEC]->(dec), (param)-[:HAS_VARIABLEDECL_TYPE]->()-[:PARAMETERIZEDTYPE_TYPE*0..1]->()-[:ITS_TYPE_IS]->(pType) WHERE dec.fullyQualifiedName CONTAINS '()' AND NOT pType.isFinal AND (NOT pType.isDeclared OR pType.accessLevel='public') RETURN 'Warning [CMU-MET52] You must not use the clone method to copy unstrasted parameters ' as description,  mInv.lineNumber as line, mInv.column as column , enclosingCU.fileName as file, 'Medium' as level